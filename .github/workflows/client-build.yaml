name: client-build

on:
  push:
    branches: [ main ]
    paths:
      - 'client/**'
      - '.github/workflows/client-build.yaml'
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release Name'
        required: true

jobs:
  create_release:
    runs-on: ubuntu-22.04
    permissions: write-all
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Set Short SHA
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Set Release Name from Input
      if: github.event_name == 'workflow_dispatch'
      run: echo "RELEASE_NAME=${{ github.event.inputs.release_name }}" >> $GITHUB_ENV

    - name: Set Release Name for Push Trigger
      if: github.event_name == 'push'
      run: echo "RELEASE_NAME=${{ env.SHORT_SHA }}" >> $GITHUB_ENV
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: client-${{ env.RELEASE_NAME }}
        release_name: client-${{ env.RELEASE_NAME }}
        draft: false
        prerelease: false
  win32:
    needs: [ create_release]
    runs-on: windows-2022
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node_modules cache
        id: cache-node
        uses: actions/cache@v4
        with:
          path: |
            client/node_modules
          key: ${{ runner.os }}-node-modules-client-${{ hashFiles('client/yarn.lock') }}
      - name: Install yarn deps
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: |
          cd client
          yarn install --frozen-lockfile
      - name: Build
        run: |
          cd client
          yarn build:win32

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./client/app.exe
          asset_name: app.exe
          asset_content_type: application/vnd.microsoft.portable-executable
  linux:
    runs-on: ubuntu-22.04
    needs: [ create_release ]
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache APT Packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: apt-cache-${{ runner.os }}-${{ hashFiles('.github/workflows/client-build.yaml') }}
          restore-keys: |
            apt-cache-${{ runner.os }}-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libx11-dev libxtst-dev libxcb-ewmh-dev libxcb1-dev cmake g++ make

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node_modules cache
        id: cache-node
        uses: actions/cache@v4
        with:
          path: |
            client/node_modules
          key: ${{ runner.os }}-node-modules-client-${{ hashFiles('client/yarn.lock') }}
      - name: Install yarn deps
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: |
          cd client
          yarn install --frozen-lockfile
      - name: Build
        run: |
          cd client
          yarn build:linux

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./client/app
          asset_name: app.elf
          asset_content_type: application/x-executable
